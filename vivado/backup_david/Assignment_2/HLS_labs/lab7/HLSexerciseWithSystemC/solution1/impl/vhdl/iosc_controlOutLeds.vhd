-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity iosc_controlOutLeds is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ctrl : IN STD_LOGIC_VECTOR (3 downto 0);
    inSwitch : IN STD_LOGIC_VECTOR (3 downto 0);
    outLeds : OUT STD_LOGIC_VECTOR (3 downto 0);
    outLeds_ap_vld : OUT STD_LOGIC;
    internalPulse : IN STD_LOGIC );
end;


architecture behav of iosc_controlOutLeds is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_B : STD_LOGIC_VECTOR (3 downto 0) := "1011";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_E : STD_LOGIC_VECTOR (3 downto 0) := "1110";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal v_assign_fu_106 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal internalLEDValue_fu_157_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal val_V_read_fu_110_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_read_fu_129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal v_V_fu_141_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal v_V_1_fu_163_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_condition_92 : BOOLEAN;
    signal ap_condition_40 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    v_assign_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (val_V_read_fu_110_p2 = ap_const_lv4_0) and (tmp_fu_148_p2 = ap_const_lv1_0) and (tmp_1_read_fu_129_p2 = ap_const_lv1_1))) then 
                v_assign_fu_106 <= internalLEDValue_fu_157_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (val_V_read_fu_110_p2 = ap_const_lv4_0) and (tmp_fu_148_p2 = ap_const_lv1_1)))) then 
                v_assign_fu_106 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_condition_40_assign_proc : process(val_V_read_fu_110_p2, tmp_fu_148_p2, tmp_1_read_fu_129_p2)
    begin
                ap_condition_40 <= ((val_V_read_fu_110_p2 = ap_const_lv4_0) and (tmp_fu_148_p2 = ap_const_lv1_0) and (tmp_1_read_fu_129_p2 = ap_const_lv1_1));
    end process;


    ap_condition_92_assign_proc : process(val_V_read_fu_110_p2)
    begin
                ap_condition_92 <= ((val_V_read_fu_110_p2 = ap_const_lv4_1) or (val_V_read_fu_110_p2 = ap_const_lv4_2) or (val_V_read_fu_110_p2 = ap_const_lv4_3) or (val_V_read_fu_110_p2 = ap_const_lv4_4) or (val_V_read_fu_110_p2 = ap_const_lv4_5) or (val_V_read_fu_110_p2 = ap_const_lv4_6) or (val_V_read_fu_110_p2 = ap_const_lv4_7) or (val_V_read_fu_110_p2 = ap_const_lv4_8) or (val_V_read_fu_110_p2 = ap_const_lv4_9) or (val_V_read_fu_110_p2 = ap_const_lv4_A) or (val_V_read_fu_110_p2 = ap_const_lv4_B) or (val_V_read_fu_110_p2 = ap_const_lv4_C) or (val_V_read_fu_110_p2 = ap_const_lv4_D) or (val_V_read_fu_110_p2 = ap_const_lv4_E) or (val_V_read_fu_110_p2 = ap_const_lv4_F));
    end process;

    internalLEDValue_fu_157_p2 <= std_logic_vector(unsigned(ap_const_lv32_1) + unsigned(v_assign_fu_106));

    outLeds_assign_proc : process(ap_CS_fsm_state3, val_V_read_fu_110_p2, tmp_fu_148_p2, v_V_fu_141_p2, v_V_1_fu_163_p1, ap_condition_92, ap_condition_40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
            if (((val_V_read_fu_110_p2 = ap_const_lv4_0) and (tmp_fu_148_p2 = ap_const_lv1_1))) then 
                outLeds <= ap_const_lv4_0;
            elsif ((ap_condition_40 = ap_const_boolean_1)) then 
                outLeds <= v_V_1_fu_163_p1;
            elsif ((ap_condition_92 = ap_const_boolean_1)) then 
                outLeds <= v_V_fu_141_p2;
            else 
                outLeds <= "XXXX";
            end if;
        else 
            outLeds <= "XXXX";
        end if; 
    end process;


    outLeds_ap_vld_assign_proc : process(ap_CS_fsm_state3, val_V_read_fu_110_p2, tmp_fu_148_p2, tmp_1_read_fu_129_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (val_V_read_fu_110_p2 = ap_const_lv4_0) and (tmp_fu_148_p2 = ap_const_lv1_0) and (tmp_1_read_fu_129_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (val_V_read_fu_110_p2 = ap_const_lv4_0) and (tmp_fu_148_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and ((val_V_read_fu_110_p2 = ap_const_lv4_1) or (val_V_read_fu_110_p2 = ap_const_lv4_2) or (val_V_read_fu_110_p2 = ap_const_lv4_3) or (val_V_read_fu_110_p2 = ap_const_lv4_4) or (val_V_read_fu_110_p2 = ap_const_lv4_5) or (val_V_read_fu_110_p2 = ap_const_lv4_6) or (val_V_read_fu_110_p2 = ap_const_lv4_7) or (val_V_read_fu_110_p2 = ap_const_lv4_8) or (val_V_read_fu_110_p2 = ap_const_lv4_9) or (val_V_read_fu_110_p2 = ap_const_lv4_A) or (val_V_read_fu_110_p2 = ap_const_lv4_B) or (val_V_read_fu_110_p2 = ap_const_lv4_C) or (val_V_read_fu_110_p2 = ap_const_lv4_D) or (val_V_read_fu_110_p2 = ap_const_lv4_E) or (val_V_read_fu_110_p2 = ap_const_lv4_F))))) then 
            outLeds_ap_vld <= ap_const_logic_1;
        else 
            outLeds_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_read_fu_129_p2 <= (0=>internalPulse, others=>'-');
    tmp_fu_148_p2 <= "1" when (inSwitch = ap_const_lv4_8) else "0";
    v_V_1_fu_163_p1 <= v_assign_fu_106(4 - 1 downto 0);
    v_V_fu_141_p2 <= (inSwitch and ctrl);
    val_V_read_fu_110_p2 <= ctrl;
end behav;
