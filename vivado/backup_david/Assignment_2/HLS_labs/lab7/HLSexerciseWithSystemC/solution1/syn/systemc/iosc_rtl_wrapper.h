//RTL Wrapper auto-generated by Vivado HLS.
#include "iosc.h"


SC_MODULE(iosc_rtl_wrapper) {

    //ESL interface.

    sc_in<bool > clk;

    sc_in<bool > reset;

    sc_in<sc_uint<4> > ctrl;

    sc_in<sc_uint<4> > inSwitch;

    sc_out<sc_uint<4> > outLeds;

    //RTL interface signals.


    sc_signal<sc_logic > rtl_reset;

    sc_signal<sc_lv<4> > rtl_ctrl;

    sc_signal<sc_lv<4> > rtl_inSwitch;

    sc_signal<sc_lv<4> > rtl_outLeds;


iosc* iosc_inst;

    SC_CTOR(iosc_rtl_wrapper) { 

        iosc_inst = new iosc("iosc_rtl_inst");


        initInstances(iosc_inst);

        SC_METHOD(signal_connection);

        sensitive<<clk<<reset<<ctrl<<inSwitch<<rtl_outLeds;

    }

    ~iosc_rtl_wrapper() {

    delete iosc_inst;

    }

    void initInstances(iosc * iosc_inst) {

        //The RTL model.

        
        iosc_inst->clk(clk);

        iosc_inst->reset(rtl_reset);

        iosc_inst->ctrl(rtl_ctrl);

        iosc_inst->inSwitch(rtl_inSwitch);

        iosc_inst->outLeds(rtl_outLeds);

    }


    void signal_connection() {


        rtl_reset.write((sc_logic)(reset.read()));

        rtl_ctrl.write((sc_lv<4>)(ctrl.read()));

        rtl_inSwitch.write((sc_lv<4>)(inSwitch.read()));

        outLeds.write((sc_lv<4>)(rtl_outLeds.read()));


    }

};
